
package secondconverter;

import java.math.BigDecimal;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TemperatureConversionsSoapType", targetNamespace = "http://webservices.daehosting.com/temperature")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TemperatureConversionsSoapType {


    /**
     * Converts a Celcius Temperature to a Fahrenheit value
     * 
     * @param nCelcius
     * @return
     *     returns java.math.BigDecimal
     */
    @WebMethod(operationName = "CelciusToFahrenheit")
    @WebResult(name = "CelciusToFahrenheitResult", targetNamespace = "http://webservices.daehosting.com/temperature")
    @RequestWrapper(localName = "CelciusToFahrenheit", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.CelciusToFahrenheit")
    @ResponseWrapper(localName = "CelciusToFahrenheitResponse", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.CelciusToFahrenheitResponse")
    public BigDecimal celciusToFahrenheit(
        @WebParam(name = "nCelcius", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nCelcius);

    /**
     * Converts a Fahrenheit Temperature to a Celcius value
     * 
     * @param nFahrenheit
     * @return
     *     returns java.math.BigDecimal
     */
    @WebMethod(operationName = "FahrenheitToCelcius")
    @WebResult(name = "FahrenheitToCelciusResult", targetNamespace = "http://webservices.daehosting.com/temperature")
    @RequestWrapper(localName = "FahrenheitToCelcius", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.FahrenheitToCelcius")
    @ResponseWrapper(localName = "FahrenheitToCelciusResponse", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.FahrenheitToCelciusResponse")
    public BigDecimal fahrenheitToCelcius(
        @WebParam(name = "nFahrenheit", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nFahrenheit);

    /**
     * Windchill temperature calculated with the formula of Steadman
     * 
     * @param nCelcius
     * @param nWindSpeed
     * @return
     *     returns java.math.BigDecimal
     */
    @WebMethod(operationName = "WindChillInCelcius")
    @WebResult(name = "WindChillInCelciusResult", targetNamespace = "http://webservices.daehosting.com/temperature")
    @RequestWrapper(localName = "WindChillInCelcius", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.WindChillInCelcius")
    @ResponseWrapper(localName = "WindChillInCelciusResponse", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.WindChillInCelciusResponse")
    public BigDecimal windChillInCelcius(
        @WebParam(name = "nCelcius", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nCelcius,
        @WebParam(name = "nWindSpeed", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nWindSpeed);

    /**
     * Windchill temperature calculated with the formula of Steadman
     * 
     * @param nFahrenheit
     * @param nWindSpeed
     * @return
     *     returns java.math.BigDecimal
     */
    @WebMethod(operationName = "WindChillInFahrenheit")
    @WebResult(name = "WindChillInFahrenheitResult", targetNamespace = "http://webservices.daehosting.com/temperature")
    @RequestWrapper(localName = "WindChillInFahrenheit", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.WindChillInFahrenheit")
    @ResponseWrapper(localName = "WindChillInFahrenheitResponse", targetNamespace = "http://webservices.daehosting.com/temperature", className = "com.daehosting.webservices.temperature.WindChillInFahrenheitResponse")
    public BigDecimal windChillInFahrenheit(
        @WebParam(name = "nFahrenheit", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nFahrenheit,
        @WebParam(name = "nWindSpeed", targetNamespace = "http://webservices.daehosting.com/temperature")
        BigDecimal nWindSpeed);

}
